
import classes.mainclass;
import java.awt.Component;
import java.awt.Font;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Akshat
 */
public class movie_select extends javax.swing.JFrame {
 
     String[] filename = {"spiderman.jpg","dunkirk.jpeg","baby.jpg","wonderwoman.jpg","logan.jpg","annabelle.jpg","Dangal.jpg","Bahubali.jpg"};
     ImageIcon[] images;
     
     
     
//    private Icon[] pics = {new ImageIcon(getClass().getResource(filename[0])), new ImageIcon(getClass().getResource(filename[1])), new ImageIcon(getClass().getResource(filename[2])), new ImageIcon(getClass().getResource(filename[3])), new ImageIcon(getClass().getResource(filename[4])), new ImageIcon(getClass().getResource(filename[5])), new ImageIcon(getClass().getResource(filename[6])), new ImageIcon(getClass().getResource(filename[7]))};
    
    /**
     * Creates new form movie_select
     */
    
     public movie_select() 
     {
        super("MOVIE SELECT");
        //setLayout(new FlowLayout());
        
        
        
        images = new ImageIcon[filename.length];
        Integer[] intArray = new Integer[filename.length];
        for (int i = 0; i < filename.length; i++) {
            intArray[i] = i;
            images[i] = createImageIcon("Images/" + filename[i]);
            if (images[i] != null) {
                images[i].setDescription(filename[i]);
            }
        }
        
        cbox = new JComboBox(filename);
        
        /*cbox.addItemListener(
                new ItemListener() {
                    public void ItemStateChanged(ItemEvent event){
                        if(event.getStateChange()==ItemEvent.SELECTED())
                    }
                }
        );
//            this.pics = new Icon[]{new ImageIcon(getClass().getResource(filename[0])), new ImageIcon(getClass().getResource(filename[1])), new ImageIcon(getClass().getResource(filename[2])), new ImageIcon(getClass().getResource(filename[3])), new ImageIcon(getClass().getResource(filename[4])), new ImageIcon(getClass().getResource(filename[5])), new ImageIcon(getClass().getResource(filename[6])), new ImageIcon(getClass().getResource(filename[7]))};
        */
        initComponents();
        
       // cbox = new JComboBox(filename);
      txt1.setVisible(false);
      lbm.setVisible(false);
      lbsc.setVisible(false);
      lbr.setVisible(false);
      lbd.setVisible(false);
      lbua.setVisible(false);
      txtn.setVisible(false);
      txtsc.setVisible(false);
      txtr.setVisible(false);
      txtd.setVisible(false);
      txtua.setVisible(false);
      btbook.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        select_movie_tiitle = new javax.swing.JLabel();
        cbox = new javax.swing.JComboBox<>();
        pic = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        lbm = new javax.swing.JLabel();
        lbsc = new javax.swing.JLabel();
        lbr = new javax.swing.JLabel();
        lbd = new javax.swing.JLabel();
        lbua = new javax.swing.JLabel();
        txtn = new javax.swing.JTextField();
        txtsc = new javax.swing.JTextField();
        txtr = new javax.swing.JTextField();
        txtd = new javax.swing.JTextField();
        txtua = new javax.swing.JTextField();
        btbook = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        select_movie_tiitle.setText("SELECT MOVIE");

        cbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---------------------------SELECT---------------------------", "Spider-Man:Homecoming", "Dunkirk", "Baby Driver", "Wonder Woman", "Logan", "Annabelle: The Creation", "Dangal", "Baahubali: The Beginning" }));
        cbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxActionPerformed(evt);
            }
        });

        txt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt1ActionPerformed(evt);
            }
        });

        lbm.setText("MOVIE NAME:");

        lbsc.setText("STARCAST:");

        lbr.setText("RATINGS:");

        lbd.setText("DURATION:");

        lbua.setText("U/A RATING:");

        btbook.setText("BOOK");
        btbook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pic, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbm)
                                    .addComponent(lbsc)
                                    .addComponent(lbr)
                                    .addComponent(lbd)
                                    .addComponent(lbua))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtua, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                    .addComponent(txtd, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                    .addComponent(txtr)
                                    .addComponent(txtsc)
                                    .addComponent(txtn)))
                            .addComponent(txt1)
                            .addComponent(btbook, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(392, 392, 392)
                        .addComponent(select_movie_tiitle)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(select_movie_tiitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(pic, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbm)
                            .addComponent(txtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbsc)
                            .addComponent(txtsc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbr)
                            .addComponent(txtr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbd)
                            .addComponent(txtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbua)
                            .addComponent(txtua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(97, 97, 97)
                        .addComponent(btbook, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxActionPerformed
        // TODO add your handling code here:
       String JDBC_DRIVER = "com.mysql.jdbc.Driver";  
       String DB_URL = "jdbc:mysql://localhost:3306/movies";
       String USER = "root";
       String PASS = "goodluck";
       
       
       Connection conn = null;
       
       try{
             Class.forName("com.mysql.jdbc.Driver");
             System.out.println("Connecting to a selected database...");
             conn = DriverManager.getConnection(DB_URL, USER, PASS);
             System.out.println("Connected database successfully...");
             Statement stmt = conn.createStatement();
             String query = "select * from movie_details";
             ResultSet rs = stmt.executeQuery(query);
      
        txt1.setVisible(false);
        txt1.setEditable(false);
        txtn.setEditable(false);
        txtsc.setEditable(false);
        txtr.setEditable(false);
        txtd.setEditable(false);
        txtua.setEditable(false);
        btbook.setVisible(true);
        
        JComboBox<String> cbox = (JComboBox<String>) evt.getSource();
        String movie = (String) cbox.getSelectedItem();
        
        images = new ImageIcon[filename.length];
        
        if(movie.equals("Spider-Man:Homecoming"))
        {
            txt1.setVisible(true);
            txt1.setText("Spider-Man:Homecoming");
            images[0] = createImageIcon("Images/" + filename[0]);
            if (images[0] != null) 
                images[0].setDescription(filename[0]);
            
            pic.setIcon(images[0]);
            mainclass.selected_movie = "Spiderman";
            
            rs.absolute(7);
            String movieName = rs.getString("movie_name");
            String starCast = rs.getString("star_cast");
            String ratings = rs.getString("ratings");
            String duration = rs.getString("duration");
            String UARating = rs.getString("U_A_rating");
            
            lbm.setVisible(true);
            lbsc.setVisible(true);
            lbr.setVisible(true);
            lbd.setVisible(true);
            lbua.setVisible(true);
            
            txtn.setVisible(true);
            txtsc.setVisible(true);
            txtr.setVisible(true);
            txtd.setVisible(true);
            txtua.setVisible(true);
            txtn.setText(movieName);
            txtsc.setText(starCast);
            txtr.setText(ratings);
            txtd.setText(duration);
            txtua.setText(UARating);    
             
        }
        else if(movie.equals("Dunkirk"))
        {
            txt1.setVisible(true);
            txt1.setText("Dunkirk");
            images[1] = createImageIcon("Images/" + filename[1]);
            if (images[1] != null) 
                images[1].setDescription(filename[1]);
            
            pic.setIcon(images[1]);
            mainclass.selected_movie = "Dunkirk";
             rs.absolute(5);
            String movieName = rs.getString("movie_name");
            String starCast = rs.getString("star_cast");
            String ratings = rs.getString("ratings");
            String duration = rs.getString("duration");
            String UARating = rs.getString("U_A_rating");
            
            lbm.setVisible(true);
            lbsc.setVisible(true);
            lbr.setVisible(true);
            lbd.setVisible(true);
            lbua.setVisible(true);
            
            txtn.setVisible(true);
            txtsc.setVisible(true);
            txtr.setVisible(true);
            txtd.setVisible(true);
            txtua.setVisible(true);
            txtn.setText(movieName);
            txtsc.setText(starCast);
            txtr.setText(ratings);
            txtd.setText(duration);
            txtua.setText(UARating);    
             
        }
        else if(movie.equals("Baby Driver"))
        {
            txt1.setVisible(true);
            txt1.setText("Baby Driver");
            images[2] = createImageIcon("Images/" + filename[2]);
            if (images[2] != null) 
                images[2].setDescription(filename[2]);
            
            pic.setIcon(images[2]);
            mainclass.selected_movie = "Baby Driver";
            rs.absolute(3);
            String movieName = rs.getString("movie_name");
            String starCast = rs.getString("star_cast");
            String ratings = rs.getString("ratings");
            String duration = rs.getString("duration");
            String UARating = rs.getString("U_A_rating");
            
            lbm.setVisible(true);
            lbsc.setVisible(true);
            lbr.setVisible(true);
            lbd.setVisible(true);
            lbua.setVisible(true);
            
            txtn.setVisible(true);
            txtsc.setVisible(true);
            txtr.setVisible(true);
            txtd.setVisible(true);
            txtua.setVisible(true);
            txtn.setText(movieName);
            txtsc.setText(starCast);
            txtr.setText(ratings);
            txtd.setText(duration);
            txtua.setText(UARating);    
             
        }
        else if(movie.equals("Wonder Woman"))
        {
            txt1.setVisible(true);
            txt1.setText("Wonder Woman");
            images[3] = createImageIcon("Images/" + filename[3]);
            if (images[3] != null) 
                images[3].setDescription(filename[3]);
            
            pic.setIcon(images[3]);
            mainclass.selected_movie = "Wonderwoman";
            rs.absolute(8);
            String movieName = rs.getString("movie_name");
            String starCast = rs.getString("star_cast");
            String ratings = rs.getString("ratings");
            String duration = rs.getString("duration");
            String UARating = rs.getString("U_A_rating");
            
            lbm.setVisible(true);
            lbsc.setVisible(true);
            lbr.setVisible(true);
            lbd.setVisible(true);
            lbua.setVisible(true);
            
            txtn.setVisible(true);
            txtsc.setVisible(true);
            txtr.setVisible(true);
            txtd.setVisible(true);
            txtua.setVisible(true);
            txtn.setText(movieName);
            txtsc.setText(starCast);
            txtr.setText(ratings);
            txtd.setText(duration);
            txtua.setText(UARating);    
             
        }
        else if(movie.equals("Logan"))
        {
            txt1.setVisible(true);
            txt1.setText("Logan");
            images[4] = createImageIcon("Images/" + filename[4]);
            if (images[4] != null) 
                images[4].setDescription(filename[4]);
            
            pic.setIcon(images[4]);
            mainclass.selected_movie = "Logan";
            rs.absolute(6);
            String movieName = rs.getString("movie_name");
            String starCast = rs.getString("star_cast");
            String ratings = rs.getString("ratings");
            String duration = rs.getString("duration");
            String UARating = rs.getString("U_A_rating");
            
            lbm.setVisible(true);
            lbsc.setVisible(true);
            lbr.setVisible(true);
            lbd.setVisible(true);
            lbua.setVisible(true);
            
            txtn.setVisible(true);
            txtsc.setVisible(true);
            txtr.setVisible(true);
            txtd.setVisible(true);
            txtua.setVisible(true);
            txtn.setText(movieName);
            txtsc.setText(starCast);
            txtr.setText(ratings);
            txtd.setText(duration);
            txtua.setText(UARating);    
             
        }
        else if(movie.equals("Annabelle: The Creation"))
        {
            txt1.setVisible(true);
            txt1.setText("Annabelle: The Creation");
            images[5] = createImageIcon("Images/" + filename[5]);
            if (images[5] != null) 
                images[5].setDescription(filename[5]);
            
            pic.setIcon(images[5]);
            mainclass.selected_movie = "Annabelle";
            
            rs.absolute(1);
            String movieName = rs.getString("movie_name");
            String starCast = rs.getString("star_cast");
            String ratings = rs.getString("ratings");
            String duration = rs.getString("duration");
            String UARating = rs.getString("U_A_rating");
            
            lbm.setVisible(true);
            lbsc.setVisible(true);
            lbr.setVisible(true);
            lbd.setVisible(true);
            lbua.setVisible(true);
            
            txtn.setVisible(true);
            txtsc.setVisible(true);
            txtr.setVisible(true);
            txtd.setVisible(true);
            txtua.setVisible(true);
            txtn.setText(movieName);
            txtsc.setText(starCast);
            txtr.setText(ratings);
            txtd.setText(duration);
            txtua.setText(UARating);    
             
        }
        else if(movie.equals("Dangal"))
        {
            txt1.setVisible(true);
            txt1.setText("Dangal");            
            images[6] = createImageIcon("Images/" + filename[6]);
            if (images[6] != null) 
                images[6].setDescription(filename[6]);
            
            pic.setIcon(images[6]);
            mainclass.selected_movie = "Dangal";
            
            rs.absolute(4);
            String movieName = rs.getString("movie_name");
            String starCast = rs.getString("star_cast");
            String ratings = rs.getString("ratings");
            String duration = rs.getString("duration");
            String UARating = rs.getString("U_A_rating");
            
            lbm.setVisible(true);
            lbsc.setVisible(true);
            lbr.setVisible(true);
            lbd.setVisible(true);
            lbua.setVisible(true);
            
            txtn.setVisible(true);
            txtsc.setVisible(true);
            txtr.setVisible(true);
            txtd.setVisible(true);
            txtua.setVisible(true);
            txtn.setText(movieName);
            txtsc.setText(starCast);
            txtr.setText(ratings);
            txtd.setText(duration);
            txtua.setText(UARating);    
             
        }
        else if(movie.equals("Baahubali: The Beginning"))
        {
            txt1.setVisible(true);
            txt1.setText("Baahubali: The Beginning");
            images[7] = createImageIcon("Images/" + filename[7]);
            if (images[7] != null) 
                images[7].setDescription(filename[7]);
            
            pic.setIcon(images[7]);
            mainclass.selected_movie = "Baahubali";
            
            rs.absolute(2);
            String movieName = rs.getString("movie_name");
            String starCast = rs.getString("star_cast");
            String ratings = rs.getString("ratings");
            String duration = rs.getString("duration");
            String UARating = rs.getString("U_A_rating");
            
            lbm.setVisible(true);
            lbsc.setVisible(true);
            lbr.setVisible(true);
            lbd.setVisible(true);
            lbua.setVisible(true);
            
            txtn.setVisible(true);
            txtsc.setVisible(true);
            txtr.setVisible(true);
            txtd.setVisible(true);
            txtua.setVisible(true);
            txtn.setText(movieName);
            txtsc.setText(starCast);
            txtr.setText(ratings);
            txtd.setText(duration);
            txtua.setText(UARating);    
             
        }        
            rs.close();
            stmt.close();
            conn.close();  
       }
       
       catch(SQLException se)
       {
           
       } 
       catch (ClassNotFoundException ex) {
             Logger.getLogger(movie_select.class.getName()).log(Level.SEVERE, null, ex);
         }    
        
    }//GEN-LAST:event_cboxActionPerformed

    private void txt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt1ActionPerformed

    private void btbookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbookActionPerformed
        // TODO add your handling code here:
        new time_screen_details().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btbookActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(movie_select.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(movie_select.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(movie_select.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(movie_select.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new movie_select().setVisible(true);
            
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbook;
    private javax.swing.JComboBox<String> cbox;
    private javax.swing.JLabel lbd;
    private javax.swing.JLabel lbm;
    private javax.swing.JLabel lbr;
    private javax.swing.JLabel lbsc;
    private javax.swing.JLabel lbua;
    private javax.swing.JLabel pic;
    private javax.swing.JLabel select_movie_tiitle;
    private javax.swing.JTextField txt1;
    private javax.swing.JTextField txtd;
    private javax.swing.JTextField txtn;
    private javax.swing.JTextField txtr;
    private javax.swing.JTextField txtsc;
    private javax.swing.JTextField txtua;
    // End of variables declaration//GEN-END:variables

       protected static ImageIcon createImageIcon(String path) {
        java.net.URL imgURL = movie_select.class.getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);
        } else {
            System.err.println("Couldn't find file: " + path);
                return null;
        }
    }

    class ComboBoxRenderer extends JLabel implements ListCellRenderer {
        private Font uhOhFont;

        public ComboBoxRenderer() {
            setOpaque(true);
            setHorizontalAlignment(CENTER);
            setVerticalAlignment(CENTER);
        }

        /*
         * This method finds the image and text corresponding
         * to the selected value and returns the label, set up
         * to display the text and image.
         */
        @Override
        public Component getListCellRendererComponent(
                                           JList list,
                                           Object value,
                                           int index,
                                           boolean isSelected,
                                           boolean cellHasFocus) {
            //Get the selected index. (The index param isn't
            //always valid, so just use the value.)
            int selectedIndex = ((Integer)value);

            if (isSelected) {
                setBackground(list.getSelectionBackground());
                setForeground(list.getSelectionForeground());
            } else {
                setBackground(list.getBackground());
                setForeground(list.getForeground());
            }

            //Set the icon and text.  If icon was null, say so.
            ImageIcon icon = images[selectedIndex];
            String pet = filename[selectedIndex];
            setIcon(icon);
            if (icon != null) {
                setText(pet);
                setFont(list.getFont());
            } else {
                setUhOhText(pet + " (no image available)",
                            list.getFont());
            }

            return this;
        }

        //Set the font and text when no image was found.
        protected void setUhOhText(String uhOhText, Font normalFont) {
            if (uhOhFont == null) { //lazily create this font
                uhOhFont = normalFont.deriveFont(Font.ITALIC);
            }
            setFont(uhOhFont);
            setText(uhOhText);
        }

      //  @Override
      //  public Component getListCellRendererComponent(JList jlist, Object e, int i, boolean bln, boolean bln1) {
        //    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        //}
    }
}

   // private ImageIcon createImageIcon(String string) {
     //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    //}

